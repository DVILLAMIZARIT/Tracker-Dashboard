%table
  %tr
    %td.track
      %p.track_no_underline
    
      %p.label
      %p.performance 
        Performance
        = render :partial => "tooltip", :locals => { :tooltip_text => 'Based on stories in \'Current\' and \'Backlog\'.' }
      %p.goal
        - if project_settings.tracks.count > 0
          - t = project_settings.tracks.map { |x| x.updated_at }.sort.last
          = "Goal (As of #{t.mon}/#{t.mday})"
        - else
          = "Goal"

        = surround '(', ')' do
          - if tracks.count > 2
            = link_to 'edit', edit_project_path(@project.id)
          - else
            = link_to 'edit', edit_project_path(@project.id), { :class => 'reverse_tooltip tooltip_default_on',  :title => 'You haven\'t enabled any tracks for this project yet.<br /><br />Click here to get started!' }
    
      %p.done Done
      %p.wip
        In Progress
        = render :partial => "tooltip", :locals => { :tooltip_text => 'Stories that are started, finished, delivered, or rejected.' }
      %p.scheduled Scheduled
    
      %p.ref-flags Red Flags
      %p.blocked Blocked
      %p.unestimated Unestimated

      %p.unplanned 
        Unplanned
        = render :partial => "tooltip", :locals => { :tooltip_text => 'Stories added after the iteration started.  Based on the \'added_midweek\' label.' }
      %p.unmet_reqs 
        Unmet Promises 
        = render :partial => "tooltip", :locals => { :tooltip_text => 'Stories promised but not finished.  Based on the \'!shipthisweek!\' label.' }

    - tracks.each do |track|
      %td.track
        %p.track= track.name
    
        %p.label
          %span.stories Stories
          %span.points Points

        %p.performance
        %p.goal
          %span.stories= track.goal[:stories]
          %span.points=  track.goal[:points]
     
        %p.done=        render :partial => "track_story", :locals => { :track=>track, :key=>:done        }
        %p.wip=         render :partial => "track_story", :locals => { :track=>track, :key=>:wip         }
        %p.scheduled=   render :partial => "track_story", :locals => { :track=>track, :key=>:scheduled   }

        %p.red-flags
        %p.blocked=     render :partial => "track_story", :locals => { :track=>track, :key=>:blocked     }
        %p.unestimated= render :partial => "track_story", :locals => { :track=>track, :key=>:unestimated }

        %p.unplanned=   render :partial => "track_story", :locals => { :track=>track, :key=>:unplanned   }
        %p.unmet_reqs=  render :partial => "track_story", :locals => { :track=>track, :key=>:unmet_reqs  }
